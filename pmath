#!/usr/bin/python
"""
A simple script for performing math in the terminal, using Python functions and
syntax. I created this when I discovered how hard it was to get a cube root
using Bash or bc.

Note that 'from __future__ import division' is called, so '/' is float division, and
'//' is integer division.

Note that this is NOT sandboxed; a malicious user might be able to delete files or do who knows what with it. Its meant for known safe input, like Bash or Python is.

Separate arguments on the command line are treated independently, and input is split by semicolons.

Examples:
$ pmath '3 + 4'
7
$ pmath -f'.4f' 'pow(2000, 1/3)'
12.5992
$ pmath -f'.4f' 'pow(200, 1/2)' 'sin(pi/2)'
14.1421
1.0000
$ pmath 'x=3;x+2'
5
"""

from __future__ import division

import math
import cmath

from optparse import OptionParser
parser = OptionParser()
parser.add_option("-c", "--cmath", action="store_true",
                  help="use complex math")
parser.add_option("-f", "--format", default='',
    help="How to format the result, e.g. '.3f'")

(opts, args) = parser.parse_args()

globald = vars(math) if not opts.cmath else vars(math)
locald = {}

args = [splitarg.strip() for arg in args for splitarg in arg.split(';')]
if len(args) == 0:
    exit(1)

for arg in args[:-1]:
    exec(arg, globald, locald)

arg = args[-1]
value = eval(arg, globald, locald)
print('{value:{format}}'.format(value=value, format=opts.format))
